if(k %in% ts_test$date_block_num){
j <- which(ts_test$date_block_num == k)
num <- ts_test[j,4]
ts[k+1] <- as.numeric(num)
}
}
if (max(ts) <= 0){
preds[i] <- 0
}
else{
fit <- arima(ts, order = c(1, 1, 2), method = "ML")  ##CHANGE THIS TO CHANGE MODEL
pred <- predict(fit)
preds[i] <- pred$pred
}
if (i %% 1000 == 0){
print(i)
}
}
preds <-list()
for(i in 74000:nrow(test)){
store_id <- test[i,2]
items_id <- test[i, 3]
ts_test <- subset(ts_train, ts_train$shop_id == store_id & ts_train$item_id == items_id)
ts <- rnorm(34, m = 0, sd = 0)
ts <- ts(ts, start = 2013, frequency = 12)
for (k in 0:33){
if(k %in% ts_test$date_block_num){
j <- which(ts_test$date_block_num == k)
num <- ts_test[j,4]
ts[k+1] <- as.numeric(num)
}
}
if (max(ts) <= 0){
preds[i] <- 0
}
else{
fit <- arima(ts, order = c(1, 1, 2), method = "ML")  ##CHANGE THIS TO CHANGE MODEL
pred <- predict(fit)
preds[i] <- pred$pred
}
if (i %% 1000 == 0){
print(i)
}
}
preds <-list()
for(i in 74000:nrow(test)){
store_id <- test[i,2]
items_id <- test[i, 3]
ts_test <- subset(ts_train, ts_train$shop_id == store_id & ts_train$item_id == items_id)
ts <- rnorm(34, m = 0, sd = 0)
ts <- ts(ts, start = 2013, frequency = 12)
for (k in 0:33){
if(k %in% ts_test$date_block_num){
j <- which(ts_test$date_block_num == k)
num <- ts_test[j,4]
ts[k+1] <- as.numeric(num)
}
}
if (max(ts) <= 0){
preds[i] <- 0
}
else{
try(fit <- arima(ts, order = c(1, 1, 2), method = "ML"))  ##CHANGE THIS TO CHANGE MODEL
pred <- predict(fit)
preds[i] <- pred$pred
}
if (i %% 1000 == 0){
print(i)
}
}
View(preds)
preds <-list()
for(i in 74000:nrow(test)){
store_id <- test[i,2]
items_id <- test[i, 3]
ts_test <- subset(ts_train, ts_train$shop_id == store_id & ts_train$item_id == items_id)
ts <- rnorm(34, m = 0, sd = 0)
ts <- ts(ts, start = 2013, frequency = 12)
for (k in 0:33){
if(k %in% ts_test$date_block_num){
j <- which(ts_test$date_block_num == k)
num <- ts_test[j,4]
ts[k+1] <- as.numeric(num)
}
}
if (max(ts) <= 0){
preds[i] <- 0
}
else{
try(fit <- arima(ts, order = c(1, 1, 2), method = "ML"))
##CHANGE THIS TO CHANGE MODEL
pred <- predict(fit)
preds[i] <- pred$pred
}
if (i %% 1000 == 0){
print(i)
}
}
preds[i]
preds[i-1]
preds[i+1]
preds[i-100:i,:]
preds[(i-100):i,:]
preds[74000:i,:]
preds[74000:,:]
preds[74000]
for (i in preds){}
for (i in preds){print preds[i]}
for (i in preds){print preds[i]}
preds[i]
preds
preds[i]
preds[i-1]
preds[i]
View(preds)
View(pred)
preds
preds <-list()
for(i in 1:nrow(test)){
store_id <- test[i,2]
items_id <- test[i, 3]
ts_test <- subset(ts_train, ts_train$shop_id == store_id & ts_train$item_id == items_id)
ts <- rnorm(34, m = 0, sd = 0)
ts <- ts(ts, start = 2013, frequency = 12)
for (k in 0:33){
if(k %in% ts_test$date_block_num){
j <- which(ts_test$date_block_num == k)
num <- ts_test[j,4]
ts[k+1] <- as.numeric(num)
}
}
if (max(ts) <= 0){
preds[i] <- 0
}
else{
try(fit <- arima(ts, order = c(1, 1, 2), method = "ML"))
##CHANGE THIS TO CHANGE MODEL
pred <- predict(fit)
preds[i] <- pred$pred
}
if (i %% 1000 == 0){
print(i)
}
}
preds[i]
ts
preds[i]
any(is.na(preds) | is.infinite(preds))
any(is.na(preds))
preds[0]
preds[1]
print(preds[1], preds[1000], preds[10000], preds[100000])
print(preds[1])
print(preds[1])
print(preds[10])
print(preds[100])
print(preds[1000])
print(preds[10000])
print(preds[100000])
sample_sub[1,1]
sample_sub[1,2]
View(sample_sub)
sample_sub[1,3]
sample_sub[2,2]
sample_sub[2,7]
sample_sub[7,2]
sample_sub[1,1]
sample_sub[1,2]
sample_sub[1,2]
sample_sub[i,2]
sample_sub[i,1]
sample_sub[i,2]
preds[100]
preds[100].value
View(pred)
View(preds)
save.image("D:/Projects/kaggle/time_series/working_files.RData")
for (i in 1:nrow(sample_sub)){
sample_sub[i,2] <- preds[i]
}
View(sample_sub)
samplE_sub[2]
sample_sub[2]
sample_sub[2,2]
sample_sub[1,2]
class(sample_sub[1,2])
print(preds[1])
print(preds[100])
print(preds[100000])
for (i in 1:nrow(sample_sub)){
sample_sub[i,2] <- preds[i]
}
View(sample_sub)
View(sample_sub)
head(sample_sub)
sample_sub[:10, :]
sample_sub[1:10,]
write.csv(sample_sub, file = "D://projects/kaggle/time_series/ARIMA.csv", row.names = FALSE)
clipped_preds = np.clip(preds, 0, 20)
clipped_preds <- function(preds, UB=20, LB=0) pmax( LB, pmin( preds, UB))
clipper<- function(preds, UB=20, LB=0) pmax( LB, pmin( preds, UB))
clipped_preds <- clipper(preds)
print(preds[1])
print(preds[100])
print(preds[100000])
for (i in 1:nrow(sample_sub)){
sample_sub[i,2] <- preds[i]
}
View(clipped_preds)
View(clipped_preds)
sample_sub[1:10,]
sample_sub[1:10,]
View(sample_sub)
for (i in 1:nrow(sample_sub)){
sample_sub[i,2] <- clipped_preds[i]
}
sample_sub[1:10,]
View(sample_sub)
write.csv(sample_sub, file = "D://projects/kaggle/time_series/ARIMA.csv", row.names = FALSE)
clipper<- function(preds, UB=15, LB=0) pmax( LB, pmin( preds, UB))
clipped_preds <- clipper(preds)
for (i in 1:nrow(sample_sub)){
sample_sub[i,2] <- clipped_preds[i]
}
sample_sub[1:10,]
View(sample_sub)
write.csv(sample_sub, file = "D://projects/kaggle/time_series/ARIMA_tight-clip.csv", row.names = FALSE)
library(tidyverse)
library(xts)
library(lubridate)
library(tseries)
pred$pred
round(pred$pred)
preds[i]
round(preds[i])
sample_sub[1:10,]
sample_sub$item_cnt_month <- round(sample_sub$item_cnt_month)
sample_sub[1:10,]
write.csv(sample_sub, file = "D://projects/kaggle/time_series/ARIMA_rouneded_tight-clip.csv", row.names = FALSE)
clipper<- function(preds, UB=10, LB=0) pmax( LB, pmin( preds, UB))
clipped_preds <- clipper(preds)
for (i in 1:nrow(sample_sub)){
sample_sub[i,2] <- clipped_preds[i]
}
sample_sub[1:10,]
write.csv(sample_sub, file = "D://projects/kaggle/time_series/ARIMA_tighter-clip.csv", row.names = FALSE)
preds <-list()
for(i in 1:nrow(test)){
store_id <- test[i,2]
items_id <- test[i, 3]
ts_test <- subset(ts_train, ts_train$shop_id == store_id & ts_train$item_id == items_id)
ts <- rnorm(34, m = 0, sd = 0)
ts <- ts(ts, start = 2013, frequency = 12)
for (k in 0:33){
if(k %in% ts_test$date_block_num){
j <- which(ts_test$date_block_num == k)
num <- ts_test[j,4]
ts[k+1] <- as.numeric(num)
}
}
if (max(ts) <= 0){
preds[i] <- 0
}
else{
try(fit <- arima(ts, order = c(1, 1, 2), method = "ML"))
##CHANGE THIS TO CHANGE MODEL
try(fit <- HoltWinters(ts, alpha = .35, beta = FALSE, gamma = FALSE))
pred <- predict(fit)
preds[i] <- pred$pred
}
if (i %% 1000 == 0){
print(i)
}
}
preds <-list()
for(i in 1:nrow(test)){
store_id <- test[i,2]
items_id <- test[i, 3]
ts_test <- subset(ts_train, ts_train$shop_id == store_id & ts_train$item_id == items_id)
ts <- rnorm(34, m = 0, sd = 0)
ts <- ts(ts, start = 2013, frequency = 12)
for (k in 0:33){
if(k %in% ts_test$date_block_num){
j <- which(ts_test$date_block_num == k)
num <- ts_test[j,4]
ts[k+1] <- as.numeric(num)
}
}
if (max(ts) <= 0){
preds[i] <- 0
}
else{
#try(fit <- arima(ts, order = c(1, 1, 2), method = "ML"))
##CHANGE THIS TO CHANGE MODEL
try(fit <- HoltWinters(ts, alpha = .35, beta = FALSE, gamma = FALSE))
pred <- predict(fit)
preds[i] <- pred$pred
}
if (i %% 1000 == 0){
print(i)
}
}
preds <-list()
for(i in 1:nrow(test)){
store_id <- test[i,2]
items_id <- test[i, 3]
ts_test <- subset(ts_train, ts_train$shop_id == store_id & ts_train$item_id == items_id)
ts <- rnorm(34, m = 0, sd = 0)
ts <- ts(ts, start = 2013, frequency = 12)
for (k in 0:33){
if(k %in% ts_test$date_block_num){
j <- which(ts_test$date_block_num == k)
num <- ts_test[j,4]
ts[k+1] <- as.numeric(num)
}
}
if (max(ts) <= 0){
preds[i] <- 0
}
else{
#try(fit <- arima(ts, order = c(1, 1, 2), method = "ML"))
##CHANGE THIS TO CHANGE MODEL
fit <- HoltWinters(ts, alpha = .35, beta = FALSE, gamma = FALSE)
pred <- predict(fit)
preds[i] <- pred$pred
}
if (i %% 1000 == 0){
print(i)
}
}
ts
fit <- HoltWinters(ts, alpha = .35, beta = FALSE, gamma = FALSE)
pred <- predict(fit)
pred
preds <-list()
for(i in 1:nrow(test)){
store_id <- test[i,2]
items_id <- test[i, 3]
ts_test <- subset(ts_train, ts_train$shop_id == store_id & ts_train$item_id == items_id)
ts <- rnorm(34, m = 0, sd = 0)
ts <- ts(ts, start = 2013, frequency = 12)
for (k in 0:33){
if(k %in% ts_test$date_block_num){
j <- which(ts_test$date_block_num == k)
num <- ts_test[j,4]
ts[k+1] <- as.numeric(num)
}
}
if (max(ts) <= 0){
preds[i] <- 0
}
else{
#try(fit <- arima(ts, order = c(1, 1, 2), method = "ML"))
##CHANGE THIS TO CHANGE MODEL
fit <- HoltWinters(ts, alpha = .35, beta = FALSE, gamma = FALSE)
pred <- predict(fit)
preds[i] <- pred$pred
}
if (i %% 1000 == 0){
print(i)
}
}
for(i in 1:nrow(test)){
store_id <- test[i,2]
items_id <- test[i, 3]
ts_test <- subset(ts_train, ts_train$shop_id == store_id & ts_train$item_id == items_id)
ts <- rnorm(34, m = 0, sd = 0)
ts <- ts(ts, start = 2013, frequency = 12)
for (k in 0:33){
if(k %in% ts_test$date_block_num){
j <- which(ts_test$date_block_num == k)
num <- ts_test[j,4]
ts[k+1] <- as.numeric(num)
}
}
if (max(ts) <= 0){
preds[i] <- 0
}
else{
#try(fit <- arima(ts, order = c(1, 1, 2), method = "ML"))
##CHANGE THIS TO CHANGE MODEL
fit <- HoltWinters(ts, alpha = .35, beta = FALSE, gamma = FALSE)
pred <- predict(fit)
preds[i] <- pred$pred
}
if (i %% 1000 == 0){
print(i)
}
}
ts_test <- subset(ts_train, ts_train$shop_id == store_id & ts_train$item_id == items_id)
ts <- rnorm(34, m = 0, sd = 0)
ts <- ts(ts, start = 2013, frequency = 12)
for (k in 0:33){
if(k %in% ts_test$date_block_num){
j <- which(ts_test$date_block_num == k)
num <- ts_test[j,4]
ts[k+1] <- as.numeric(num)
}
}
if (max(ts) <= 0){
preds[i] <- 0
}
else{
if (max(ts) <= 0){
preds[i] <- 0
}
else{
for (k in 0:33){
if(k %in% ts_test$date_block_num){
j <- which(ts_test$date_block_num == k)
num <- ts_test[j,4]
ts[k+1] <- as.numeric(num)
}
}
if (max(ts) <= 0){
preds[i] <- 0
}
else{
for (k in 0:33){
if(k %in% ts_test$date_block_num){
j <- which(ts_test$date_block_num == k)
num <- ts_test[j,4]
ts[k+1] <- as.numeric(num)
}
}
if (max(ts) <= 0){
preds[i] <- 0
}
else{
if (max(ts) <= 0){
preds[i] <- 0
}
for (k in 0:33){
if(k %in% ts_test$date_block_num){
j <- which(ts_test$date_block_num == k)
num <- ts_test[j,4]
ts[k+1] <- as.numeric(num)
}
}
if (max(ts) <= 0){
preds[i] <- 0
}
#try(fit <- arima(ts, order = c(1, 1, 2), method = "ML"))
##CHANGE THIS TO CHANGE MODEL
fit <- HoltWinters(ts, alpha = .35, beta = FALSE, gamma = FALSE)
pred <- predict(fit)
preds[i] <- pred$pred
pred <- predict(fit)
preds[i] <- pred
preds[i]
preds <-list()
for(i in 1:nrow(test)){
store_id <- test[i,2]
items_id <- test[i, 3]
ts_test <- subset(ts_train, ts_train$shop_id == store_id & ts_train$item_id == items_id)
ts <- rnorm(34, m = 0, sd = 0)
ts <- ts(ts, start = 2013, frequency = 12)
for (k in 0:33){
if(k %in% ts_test$date_block_num){
j <- which(ts_test$date_block_num == k)
num <- ts_test[j,4]
ts[k+1] <- as.numeric(num)
}
}
if (max(ts) <= 0){
preds[i] <- 0
}
else{
#try(fit <- arima(ts, order = c(1, 1, 2), method = "ML"))
##CHANGE THIS TO CHANGE MODEL
fit <- HoltWinters(ts, alpha = .35, beta = FALSE, gamma = FALSE)
pred <- predict(fit)
preds[i] <- pred
}
if (i %% 1000 == 0){
print(i)
}
}
clipper<- function(preds, UB=15, LB=0) pmax( LB, pmin( preds, UB))
clipped_preds <- clipper(preds)
print(preds[1])
print(preds[100])
print(preds[100000])
for (i in 1:nrow(sample_sub)){
sample_sub[i,2] <- clipped_preds[i]
}
sample_sub[1:10,]
write.csv(sample_sub, file = "D://projects/kaggle/time_series/exp_smooth_tight-clip.csv", row.names = FALSE)
clipper<- function(preds, UB=8, LB=0) pmax( LB, pmin( preds, UB))
clipped_preds <- clipper(preds)
for (i in 1:nrow(sample_sub)){
sample_sub[i,2] <- clipped_preds[i]
}
write.csv(sample_sub, file = "D://projects/kaggle/time_series/exp_smooth_tighter-clip.csv", row.names = FALSE)
clipper<- function(preds, UB=20, LB=0) pmax( LB, pmin( preds, UB))
clipped_preds <- clipper(preds)
print(preds[1])
print(preds[100])
print(preds[100000])
for (i in 1:nrow(sample_sub)){
sample_sub[i,2] <- clipped_preds[i]
}
write.csv(sample_sub, file = "D://projects/kaggle/time_series/exp_smooth_clip.csv", row.names = FALSE)
clipper<- function(preds, UB=11, LB=0) pmax( LB, pmin( preds, UB))
clipped_preds <- clipper(preds)
print(preds[1])
print(preds[100])
print(preds[100000])
for (i in 1:nrow(sample_sub)){
sample_sub[i,2] <- clipped_preds[i]
}
write.csv(sample_sub, file = "D://projects/kaggle/time_series/exp_smooth_11_clip.csv", row.names = FALSE)
